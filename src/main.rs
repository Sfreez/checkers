use regex::Regex;

const BOARD_WITH_PLACEHOLDERS: &str = "
        1       2       3       4       5   
  -----------------------------------------
  |   |*01|   |*02|   |   |   |   |   |   | 5
  -----------------------------------------
6 |   |   |   |   |   |   |   |   |   |   |
  -----------------------------------------
  |   |   |   |   |   |   |   |   |   |*15|15
  -----------------------------------------
16|   |   |   |   |   |   |   |   |   |   |
  -----------------------------------------
  |   |   |   |   |   |   |   |   |   |   |25
  -----------------------------------------
26|   |   |   |   |   |   |   |   |   |   |
  -----------------------------------------
  |   |   |   |   |   |   |   |   |   |   |35
  -----------------------------------------
36|   |   |   |   |   |   |   |   |   |   |
  -----------------------------------------
  |   |   |   |   |   |   |   |   |   |   |45
  -----------------------------------------
46|   |   |   |   |   |   |   |   |   |   |
  -----------------------------------------
    46      47      48      49      50";

fn main() {
    print_board();

    let regex = Regex::new(r"(\*)(\d{2})").unwrap();
    for captures in regex.captures_iter(BOARD_WITH_PLACEHOLDERS) {
        println!("{}", &captures[2].trim_start_matches('0'));
    }
}

fn print_board() {
    println!("{}", BOARD_WITH_PLACEHOLDERS);
}